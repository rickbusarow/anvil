public final class com/squareup/anvil/compiler/k2/AnvilCompilerPluginRegistrar : org/jetbrains/kotlin/compiler/plugin/CompilerPluginRegistrar {
	public fun <init> ()V
	public fun getSupportsK2 ()Z
	public fun registerExtensions (Lorg/jetbrains/kotlin/compiler/plugin/CompilerPluginRegistrar$ExtensionStorage;Lorg/jetbrains/kotlin/config/CompilerConfiguration;)V
}

public final class com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionRegistrar : org/jetbrains/kotlin/fir/extensions/FirExtensionRegistrar {
	public fun <init> (Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;)V
}

public final class com/squareup/anvil/compiler/k2/fir/extensions/SupertypeProcessorExtension : org/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public fun computeAdditionalSupertypes (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;Ljava/util/List;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Ljava/util/List;
	public fun computeAdditionalSupertypesForGeneratedNestedClass (Lorg/jetbrains/kotlin/fir/declarations/FirRegularClass;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Ljava/util/List;
	public fun needTransformSupertypes (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;)Z
	public fun registerPredicates (Lorg/jetbrains/kotlin/fir/extensions/FirDeclarationPredicateRegistrar;)V
}

public final class com/squareup/anvil/compiler/k2/fir/extensions/TopLevelClassProcessorExtension : org/jetbrains/kotlin/fir/extensions/FirDeclarationGenerationExtension {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public fun generateConstructors (Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Member;)Ljava/util/List;
	public fun generateFunctions (Lorg/jetbrains/kotlin/name/CallableId;Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Member;)Ljava/util/List;
	public fun generateNestedClassLikeDeclaration (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassSymbol;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Nested;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public fun generateProperties (Lorg/jetbrains/kotlin/name/CallableId;Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Member;)Ljava/util/List;
	public fun generateTopLevelClassLikeDeclaration (Lorg/jetbrains/kotlin/name/ClassId;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public fun getCallableNamesForClass (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassSymbol;Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Member;)Ljava/util/Set;
	public fun getNestedClassifiersNames (Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassSymbol;Lorg/jetbrains/kotlin/fir/extensions/DeclarationGenerationContext$Nested;)Ljava/util/Set;
	public fun getTopLevelClassIds ()Ljava/util/Set;
	public fun hasPackage (Lorg/jetbrains/kotlin/name/FqName;)Z
	public fun registerPredicates (Lorg/jetbrains/kotlin/fir/extensions/FirDeclarationPredicateRegistrar;)V
}

public abstract interface class com/squareup/anvil/compiler/k2/fir/internal/AnvilLogger {
	public abstract fun error (Ljava/lang/String;)V
	public abstract fun exception (Ljava/lang/Throwable;)V
	public abstract fun getErrorWriter ()Ljava/io/PrintWriter;
	public abstract fun getInfoWriter ()Ljava/io/PrintWriter;
	public abstract fun getWarnWriter ()Ljava/io/PrintWriter;
	public abstract fun info (Ljava/lang/String;)V
	public abstract fun isVerbose ()Z
	public abstract fun warn (Ljava/lang/String;)V
}

public final class com/squareup/anvil/compiler/k2/fir/internal/AnvilLoggerKt {
	public static final fun info (Lcom/squareup/anvil/compiler/k2/fir/internal/AnvilLogger;Lkotlin/jvm/functions/Function0;)V
}

public final class com/squareup/anvil/compiler/k2/fir/internal/MessageCollectorBackedAnvilLogger : com/squareup/anvil/compiler/k2/fir/internal/AnvilLogger {
	public static final field PREFIX Ljava/lang/String;
	public fun <init> (ZZLorg/jetbrains/kotlin/cli/common/messages/MessageCollector;)V
	public synthetic fun <init> (ZZLorg/jetbrains/kotlin/cli/common/messages/MessageCollector;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun error (Ljava/lang/String;)V
	public fun exception (Ljava/lang/Throwable;)V
	public fun getErrorWriter ()Ljava/io/PrintWriter;
	public fun getInfoWriter ()Ljava/io/PrintWriter;
	public final fun getMessageCollector ()Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;
	public fun getWarnWriter ()Ljava/io/PrintWriter;
	public fun info (Ljava/lang/String;)V
	public fun isVerbose ()Z
	public fun warn (Ljava/lang/String;)V
}

public final class com/squareup/anvil/compiler/k2/fir/internal/MessageCollectorBackedWriter : java/io/Writer {
	public fun <init> (Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSeverity;)V
	public fun close ()V
	public fun flush ()V
	public fun write ([CII)V
}

public final class com/squareup/anvil/compiler/k2/fir/merging/AnnotationMergingGenerator : com/squareup/anvil/compiler/k2/fir/AnnotatingSupertypeProcessor {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public fun generateAnnotation (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;)Lorg/jetbrains/kotlin/fir/expressions/FirAnnotationCall;
	public fun shouldProcess (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;)Z
}

public final class com/squareup/anvil/compiler/k2/fir/merging/InterfaceMergingGenerator : com/squareup/anvil/compiler/k2/fir/SupertypeProcessor {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public fun addSupertypes (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;Ljava/util/List;Lorg/jetbrains/kotlin/fir/extensions/FirSupertypeGenerationExtension$TypeResolveService;)Ljava/util/List;
	public fun shouldProcess (Lorg/jetbrains/kotlin/fir/declarations/FirClassLikeDeclaration;)Z
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirDependencyHintProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public final fun getAllDependencyContributedComponents ()Ljava/util/List;
	public final fun getAllDependencyContributedModules ()Ljava/util/List;
	public fun registerPredicates (Lorg/jetbrains/kotlin/fir/extensions/FirDeclarationPredicateRegistrar;)V
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirDependencyHintProviderKt {
	public static final fun getAnvilFirDependencyHintProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/AnvilFirDependencyHintProvider;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirProcessorProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public final fun getSupertypeProcessors ()Ljava/util/List;
	public final fun getTopLevelClassProcessors ()Ljava/util/List;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirProcessorProviderKt {
	public static final fun getAnvilFirProcessorProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/AnvilFirProcessorProvider;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirSymbolProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public fun registerPredicates (Lorg/jetbrains/kotlin/fir/extensions/FirDeclarationPredicateRegistrar;)V
}

public final class com/squareup/anvil/compiler/k2/fir/providers/AnvilFirSymbolProviderKt {
	public static final fun getAnvilFirSymbolProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/AnvilFirSymbolProvider;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/DaggerThingProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public final fun getInjectConstructors ()Ljava/util/List;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/DaggerThingProviderKt {
	public static final fun getDaggerThingProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/DaggerThingProvider;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/ScopedContributionProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public final fun getContributedBindingModules ()Ljava/util/List;
	public final fun getContributedBindings ()Ljava/util/List;
	public final fun getContributedModules ()Ljava/util/List;
	public final fun getContributedSupertypes ()Ljava/util/List;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/ScopedContributionProviderKt {
	public static final fun getScopedContributionProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/ScopedContributionProvider;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/ScopedMergeProvider : com/squareup/anvil/compiler/k2/fir/AnvilFirExtensionSessionComponent {
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
	public final fun getMergedComponents ()Ljava/util/List;
}

public final class com/squareup/anvil/compiler/k2/fir/providers/ScopedMergeProviderKt {
	public static final fun getScopedMergeProvider (Lorg/jetbrains/kotlin/fir/FirSession;)Lcom/squareup/anvil/compiler/k2/fir/providers/ScopedMergeProvider;
}

public final class com/squareup/anvil/compiler/k2/ir/GeneratedDeclarationsIrBodyFiller : org/jetbrains/kotlin/backend/common/extensions/IrGenerationExtension {
	public fun <init> ()V
	public fun generate (Lorg/jetbrains/kotlin/ir/declarations/IrModuleFragment;Lorg/jetbrains/kotlin/backend/common/extensions/IrPluginContext;)V
}

